name: Test and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0'  # Weekly every Sunday at midnight UTC

jobs:
  style:
    name: Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt --all -- --check

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install LLVM 18
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18

      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup component add clippy
      - run: cargo clippy -- -D warnings
      - run: cargo build --release
      - run: cargo test --release
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: book-bin
          path: target/release/book  # Direct path to compiled binary

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set Weekly Tag
        run: echo "DATE_TAG=weekly-$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Download Binary
        uses: actions/download-artifact@v4
        with:
          name: book-bin
          path: ./release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.DATE_TAG }}
          release_name: Weekly Build ${{ env.DATE_TAG }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Binary Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/book
          asset_name: book-${{ env.DATE_TAG }}
          asset_content_type: application/octet-stream

      - name: Create Zip Package
        run: |
          mkdir -p dist
          cp ./release/book ./dist/book-${{ env.DATE_TAG }}
          zip -j ./dist/book-${{ env.DATE_TAG }}.zip ./dist/book-${{ env.DATE_TAG }}

      - name: Upload Zip Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/book-${{ env.DATE_TAG }}.zip
          asset_name: book-${{ env.DATE_TAG }}.zip
          asset_content_type: application/zip
